class Banco{constructor(){this.clientes=[],this.proximoId=1}cadastrarCliente(o,e){e={id:this.proximoId++,nome:o,saldo:e};this.clientes.push(e),console.log(`Cliente ${o} foi cadastrado com sucesso no banco Turma1095_bank`)}consultarSaldo(e){var o=this.clientes.find(o=>o.id===e);return o?(console.log(`Saldo do cliente ${o.id} (${o.nome}): `+o.saldo),o.saldo):(console.error(`Cliente com ID ${e} não encontrado!`),-1)}depositar(e,o){var n=this.clientes.find(o=>o.id===e);n?(n.saldo+=o,console.log(`Depósito de ${o} foi realizado para o cliente ${n.id} (${n.nome})`)):console.error(`Cliente com ID ${e} não encontrado. Depósito não realizado.`)}sacar(e,o){var n=this.clientes.find(o=>o.id===e);n?n.saldo>=o?(n.saldo-=o,console.log(`Saque de ${o} foi realizado para o cliente ${n.id} (${n.nome})`)):console.log(`Saldo insuficiente para o cliente ${n.id} (${n.nome})`):console.error(`Cliente com ID ${e} não encontrado. Saque não realizado.`)}}export{Banco};